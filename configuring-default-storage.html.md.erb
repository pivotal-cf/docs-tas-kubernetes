---
title: Configuring Default Storage
owner: Tanzu Application Service Release Engineering
---

Tanzu Application Service for Kubernetes requires the Kubernetes cluster to provide persistent volumes
for its internal PostgreSQL database and Minio blobstore.

This topic describes how to enable dynamic provisioning of persistent volumes on Kubernetes clusters
by configuring default storage on Kubernetes clusters to support Tanzu Application Service for Kubernetes.

## <a id='prerequisites'></a> Prerequisites

Before you configure a default storage class for the Kubernetes cluster, you must have:

* A default storage class in the Kubernetes cluster. 

    If you are using a PKS-provisioned cluster, see [Provision Dynamic PVs for Use with Enterprise
    PKS](https://docs.pivotal.io/pks/volumes.html#dynamic-pv-pks) in _Configuring and Using PersistentVolumes_.

* The `kapp` utility.
  See [Installing Command-Line Tools](installing-command-line-tools.html).


## <a id='configuring-vsphere-storage'></a> Configure Default Storage for PKS-provisioned Clusters on vSphere

To configure a default storage class for a PKS-provisioned Clusters on vSphere:

1. Create a file named `vsphere-default-storage-class.yml` with the contents below:

	```
	---
	kind: StorageClass
	apiVersion: storage.k8s.io/v1
	metadata:
	  name: thin
	  annotations:
	    storageclass.kubernetes.io/is-default-class: "true"
	provisioner: kubernetes.io/vsphere-volume
	```
1. Run the following command to install the storage class:

	`$ kapp deploy -a default-storage-class -f vsphere-default-storage-class.yml`


## <a id='configuring-aws-storage'></a> Configure Default Storage for TKG-provisioned Clusters

The procedures below describe how to configure a default storage class on TKG-provisioned clusters.
Follow the procedure that corresponds to your IaaS:

+ **AWS**: [For TKG-provisioned Clusters on AWS](#aws)
+ **vSphere**: [For TKG-provisioned Clusters on vSphere](#tkg-vsphere)

### <a id='aws'></a> For TKG-provisioned Clusters on AWS

To configure a default storage class on a TKG-provisioned Kubernetes cluster for AWS:

1. Create a file named `aws-default-storage-class.yml` with the contents below:

	```
	---
	kind: StorageClass
	apiVersion: storage.k8s.io/v1
	metadata:
	  name: gp2
	  annotations:
	    storageclass.kubernetes.io/is-default-class: "true"
	provisioner: kubernetes.io/aws-ebs
	parameters:
	  type: gp2
	  fsType: ext4
	```

1. Run the following command to install the storage class:

	`$ kapp deploy -a default-storage-class -f aws-default-storage-class.yml`
  
### <a id='tkg-vsphere'></a> For TKG-provisioned Clusters on vSphere

To configure a default storage class for vSphere:

1. Create a file named `vsphere-default-storage-class.yml` with the contents below and
   replace the placeholder with your CSI datastore URL:

	```
	---
	kind: StorageClass
	apiVersion: storage.k8s.io/v1
	metadata:
	  name: thin-csi
	  annotations:
	    storageclass.kubernetes.io/is-default-class: "true"
	provisioner: csi.vsphere.vmware.com
	parameters:
	  datastoreurl: "PLACEHOLDER-DATASTORE-URL"
	```  

1. Run the following command to install the storage class:

	`$ kapp deploy -a default-storage-class -f vsphere-default-storage-class.yml`
